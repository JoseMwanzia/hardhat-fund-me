{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "I_OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x39a1584e4caf7751eb69727dfe0289864cb7945f80618a6804e874607856fad4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "894196",
    "logsBloom": "0x
    "blockHash": "0xcdcf41c0d3543d7216786ee1bd649bd24533fe52c8c29762695dcb43253ac9e7",
    "transactionHash": "0x39a1584e4caf7751eb69727dfe0289864cb7945f80618a6804e874607856fad4",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "894196",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2800ae43ba11355d1a0ce8f761fd2ce9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"I_OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// withdraw funds\\n// set a minimum value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] public funders;\\n    // 656,355\\n    // 636,417\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    function fund() public payable {\\n        // we want to be able to send minimum amount in usd\\n        // 1. How do we send ether to this contract?\\n        // inter-changed the values of the require() arguments after importing the PriceConverter liblary\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    address public immutable I_OWNER;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        I_OWNER = msg.sender;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 fundersIndex = 0;\\n            fundersIndex < funders.length;\\n            fundersIndex++\\n        ) {\\n            address funder = funders[fundersIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        funders = new address[](0);\\n        // actually withdraw the funds\\n\\n        // transfer\\n        // send\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed!\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == I_OWNER, \\\"Sender is not owner!\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x87dcc9dedbd5e6b681092725c7cf6fd23833a55da6014180c442c8828f0003b6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\nlibrary PriceConverter {\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        // ABI\\n        // Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n            // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306); // WE NO LONGER NEED THIS BEACUSE WE SET 'AggregatorV3Interface priceFeed'\\n            (,int256 price,,,) = priceFeed.latestRoundData(); \\n        // ETH in terms of usd\\n        return uint256(price * 1e18);\\n    }\\n\\n    // function getVersion() public view returns(uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n    //     return priceFeed.version();\\n    // } // IS HERE TO SHOW HOW TO WORK WITH INTERFACES, THEREFORE WE DONT REALLY NEED IT IN OUR CODE BASE\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1*18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x9399772844231ffb2efd01ce6022828e2e52e7568b68fb6ba7a2c67285de0c77\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200103338038062001033833981810160405281019061003491906100c7565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610142565b6000815190506100c18161012b565b92915050565b6000602082840312156100dd576100dc610126565b5b60006100eb848285016100b2565b91505092915050565b60006100ff82610106565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610134816100f4565b811461013f57600080fd5b50565b60805160601c610ecb620001686000396000818161019301526104270152610ecb6000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f457806378dff77b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae91906107b7565b6103da565b6040516100c091906109f0565b60405180910390f35b3480156100d557600080fd5b506100de6103f2565b6040516100eb91906109f0565b60405180910390f35b34801561010057600080fd5b506101096103ff565b6040516101169190610975565b60405180910390f35b34801561012b57600080fd5b50610134610425565b604051610141919061095a565b60405180910390f35b610152610449565b005b34801561016057600080fd5b5061017b600480360381019061017691906107e4565b610584565b604051610188919061095a565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906109d0565b60405180910390fd5b60005b6000805490508110156102ca57600080828154811061024457610243610d58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102c290610cb1565b915050610222565b50600067ffffffffffffffff8111156102e6576102e5610d87565b5b6040519080825280602002602001820160405280156103145781602001602082028036833780820191505090505b506000908051906020019061032a9291906106a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035190610945565b60006040518083038185875af1925050503d806000811461038e576040519150601f19603f3d011682016040523d82523d6000602084013e610393565b606091505b50509050806103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906109b0565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6802b5e3af16b1880000610488600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c390919063ffffffff16565b10156104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610990565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057b9190610a27565b92505081905550565b6000818154811061059457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cf83610604565b905060006012600186846105e39190610bc5565b6105ed9190610a7d565b6105f79190610bc5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190610811565b505050915050670de0b6b3a76400008161069f9190610aae565b915050919050565b828054828255906000526020600020908101928215610720579160200282015b8281111561071f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c7565b5b50905061072d9190610731565b5090565b5b8082111561074a576000816000905550600101610732565b5090565b60008135905061075d81610e39565b92915050565b60008151905061077281610e50565b92915050565b60008135905061078781610e67565b92915050565b60008151905061079c81610e67565b92915050565b6000815190506107b181610e7e565b92915050565b6000602082840312156107cd576107cc610db6565b5b60006107db8482850161074e565b91505092915050565b6000602082840312156107fa576107f9610db6565b5b600061080884828501610778565b91505092915050565b600080600080600060a0868803121561082d5761082c610db6565b5b600061083b888289016107a2565b955050602061084c88828901610763565b945050604061085d8882890161078d565b935050606061086e8882890161078d565b925050608061087f888289016107a2565b9150509295509295909350565b61089581610c1f565b82525050565b6108a481610c7b565b82525050565b60006108b7600083610a0b565b91506108c282610dbb565b600082019050919050565b60006108da601383610a16565b91506108e582610dbe565b602082019050919050565b60006108fd600c83610a16565b915061090882610de7565b602082019050919050565b6000610920601483610a16565b915061092b82610e10565b602082019050919050565b61093f81610c5b565b82525050565b6000610950826108aa565b9150819050919050565b600060208201905061096f600083018461088c565b92915050565b600060208201905061098a600083018461089b565b92915050565b600060208201905081810360008301526109a9816108cd565b9050919050565b600060208201905081810360008301526109c9816108f0565b9050919050565b600060208201905081810360008301526109e981610913565b9050919050565b6000602082019050610a056000830184610936565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a3282610c5b565b9150610a3d83610c5b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a7257610a71610cfa565b5b828201905092915050565b6000610a8882610c5b565b9150610a9383610c5b565b925082610aa357610aa2610d29565b5b828204905092915050565b6000610ab982610c31565b9150610ac483610c31565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0357610b02610cfa565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b4057610b3f610cfa565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b7d57610b7c610cfa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bba57610bb9610cfa565b5b828202905092915050565b6000610bd082610c5b565b9150610bdb83610c5b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1457610c13610cfa565b5b828202905092915050565b6000610c2a82610c3b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8682610c8d565b9050919050565b6000610c9882610c9f565b9050919050565b6000610caa82610c3b565b9050919050565b6000610cbc82610c5b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cef57610cee610cfa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b7f53656e646572206973206e6f74206f776e657221000000000000000000000000600082015250565b610e4281610c1f565b8114610e4d57600080fd5b50565b610e5981610c31565b8114610e6457600080fd5b50565b610e7081610c5b565b8114610e7b57600080fd5b50565b610e8781610c65565b8114610e9257600080fd5b5056fea2646970667358221220e3b3fab284dec3e06dc245ce2727c013f4695f5e02d7597ee03641bed718f5ad64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f457806378dff77b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae91906107b7565b6103da565b6040516100c091906109f0565b60405180910390f35b3480156100d557600080fd5b506100de6103f2565b6040516100eb91906109f0565b60405180910390f35b34801561010057600080fd5b506101096103ff565b6040516101169190610975565b60405180910390f35b34801561012b57600080fd5b50610134610425565b604051610141919061095a565b60405180910390f35b610152610449565b005b34801561016057600080fd5b5061017b600480360381019061017691906107e4565b610584565b604051610188919061095a565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906109d0565b60405180910390fd5b60005b6000805490508110156102ca57600080828154811061024457610243610d58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102c290610cb1565b915050610222565b50600067ffffffffffffffff8111156102e6576102e5610d87565b5b6040519080825280602002602001820160405280156103145781602001602082028036833780820191505090505b506000908051906020019061032a9291906106a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035190610945565b60006040518083038185875af1925050503d806000811461038e576040519150601f19603f3d011682016040523d82523d6000602084013e610393565b606091505b50509050806103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906109b0565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6802b5e3af16b1880000610488600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c390919063ffffffff16565b10156104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610990565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057b9190610a27565b92505081905550565b6000818154811061059457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cf83610604565b905060006012600186846105e39190610bc5565b6105ed9190610a7d565b6105f79190610bc5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190610811565b505050915050670de0b6b3a76400008161069f9190610aae565b915050919050565b828054828255906000526020600020908101928215610720579160200282015b8281111561071f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c7565b5b50905061072d9190610731565b5090565b5b8082111561074a576000816000905550600101610732565b5090565b60008135905061075d81610e39565b92915050565b60008151905061077281610e50565b92915050565b60008135905061078781610e67565b92915050565b60008151905061079c81610e67565b92915050565b6000815190506107b181610e7e565b92915050565b6000602082840312156107cd576107cc610db6565b5b60006107db8482850161074e565b91505092915050565b6000602082840312156107fa576107f9610db6565b5b600061080884828501610778565b91505092915050565b600080600080600060a0868803121561082d5761082c610db6565b5b600061083b888289016107a2565b955050602061084c88828901610763565b945050604061085d8882890161078d565b935050606061086e8882890161078d565b925050608061087f888289016107a2565b9150509295509295909350565b61089581610c1f565b82525050565b6108a481610c7b565b82525050565b60006108b7600083610a0b565b91506108c282610dbb565b600082019050919050565b60006108da601383610a16565b91506108e582610dbe565b602082019050919050565b60006108fd600c83610a16565b915061090882610de7565b602082019050919050565b6000610920601483610a16565b915061092b82610e10565b602082019050919050565b61093f81610c5b565b82525050565b6000610950826108aa565b9150819050919050565b600060208201905061096f600083018461088c565b92915050565b600060208201905061098a600083018461089b565b92915050565b600060208201905081810360008301526109a9816108cd565b9050919050565b600060208201905081810360008301526109c9816108f0565b9050919050565b600060208201905081810360008301526109e981610913565b9050919050565b6000602082019050610a056000830184610936565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a3282610c5b565b9150610a3d83610c5b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a7257610a71610cfa565b5b828201905092915050565b6000610a8882610c5b565b9150610a9383610c5b565b925082610aa357610aa2610d29565b5b828204905092915050565b6000610ab982610c31565b9150610ac483610c31565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0357610b02610cfa565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b4057610b3f610cfa565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b7d57610b7c610cfa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bba57610bb9610cfa565b5b828202905092915050565b6000610bd082610c5b565b9150610bdb83610c5b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1457610c13610cfa565b5b828202905092915050565b6000610c2a82610c3b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8682610c8d565b9050919050565b6000610c9882610c9f565b9050919050565b6000610caa82610c3b565b9050919050565b6000610cbc82610c5b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cef57610cee610cfa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b7f53656e646572206973206e6f74206f776e657221000000000000000000000000600082015250565b610e4281610c1f565b8114610e4d57600080fd5b50565b610e5981610c31565b8114610e6457600080fd5b50565b610e7081610c5b565b8114610e7b57600080fd5b50565b610e8781610c65565b8114610e9257600080fd5b5056fea2646970667358221220e3b3fab284dec3e06dc245ce2727c013f4695f5e02d7597ee03641bed718f5ad64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 98,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}